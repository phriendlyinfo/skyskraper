#!/usr/bin/env node

var fs = require('fs')
  , nopt = require('nopt')
  , Path = require('path')
  , skyskraper = require(Path.join(__dirname, '..'));

var options = (function(){
  var options = {
    apikey: String,
    date: String,
    from: String,
    output: String,
    to: String
  }
  var aliases = {
    d: '--date',
    k: '--apikey',
    o: '--output'
  }
  return nopt(options, aliases, process.argv);
}.call());

if (options.help) {
  console.log(fs.readFileSync(Path.join(__dirname, 'help.txt'), {encoding: 'utf8'}));
  process.exit(0);
}

var method = options.argv.remain[0]
  , opts = {pnetApikey: options.apikey};

if (null != options.to) {
  opts.to = options.to;
}

if (null != options.from) {
  opts.from = options.from;
}

if ('scrape' === method)
  skyskraper.scrape(options.date, opts, callback);
else if ('bulkScrape' === method)
  skyskraper.bulkScrape(opts, callback)
else {
  console.error("method must be a valid skyskraper method, either `scrape` or `bulkScrape`");
  process.exit(1);
}

function callback(err, shows){
  if (null != err) {
    console.error(err.message);
    process.exit(1);
  }

  var formattedShows = JSON.stringify(shows, null, 4);

  if (null != options.output)
    fs.writeFileSync(options.output, formattedShows);
  else
    console.log(formattedShows);

  process.exit(0);
}
